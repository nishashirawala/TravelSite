<?xml version="1.0" encoding="UTF-8"?>

<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd ">

	<http auto-config="true" use-expressions="true"
		access-denied-page="/homepage.action?accessDenied=true">
		<form-login login-processing-url="/login.action"
			login-page="/login" authentication-failure-handler-ref="customAuthenticationFailureHandler"
			authentication-success-handler-ref="customAuthenticationSuccessHandler" />
		<logout invalidate-session="true" logout-url="/logout.action"
			logout-success-url="" />
	</http>
	<authentication-manager>
		<authentication-provider user-service-ref="jdbcAuthenticationDao">
			<password-encoder ref="passwordEncoder"></password-encoder>
		</authentication-provider>
	</authentication-manager>

	<beans:bean id="filterSecurityInterceptor"
		class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
		<beans:property name="authenticationManager" ref="authenticationManager" />
		<beans:property name="accessDecisionManager" ref="accessDecisionManager" />
		<beans:property name="securityMetadataSource">
			<filter-security-metadata-source>
				<intercept-url pattern="/**/*.action*" access="ROLE_USER" />
			</filter-security-metadata-source>
		</beans:property>
	</beans:bean>

	<beans:bean id="httpSessionContextIntegrationFilter"
		class="org.springframework.security.web.context.SecurityContextPersistenceFilter">
	</beans:bean>

	<beans:bean id="authenticationProcessingFilter" class="com.travel.filter.RegistrationFilter">
		<beans:property name="userService" ref="userService" />
		<beans:property name="authenticationManager" ref="authenticationManager" />
		<beans:property name="filterProcessesUrl" value="/login.action" />
		<beans:property name="continueChainBeforeSuccessfulAuthentication"
			value="true" />
	</beans:bean>

	<beans:bean id="passwordEncoder"
		class="org.springframework.security.authentication.encoding.ShaPasswordEncoder" />

	<beans:bean id="daoAuthenticationProvider"
		class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<beans:property name="userDetailsService" ref="jdbcAuthenticationDao" />
		<beans:property name="passwordEncoder" ref="passwordEncoder" />
	</beans:bean>

	<beans:bean id="authenticationManager"
		class="org.springframework.security.authentication.ProviderManager">
		<beans:property name="providers">
			<beans:list>
				<beans:ref local="daoAuthenticationProvider" />
			</beans:list>
		</beans:property>
	</beans:bean>


	<beans:bean id="jdbcAuthenticationDao" class="com.travel.security.extended.JdbcDaoImpl">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="usersByUsernameQuery">
			<beans:value>
				SELECT username,password,isactive FROM app_user WHERE
				username = ?
			</beans:value>
		</beans:property>
		<beans:property name="authoritiesByUsernameQuery">
			<beans:value>
				SELECT u.username, r.rolename FROM app_user u, role r
				WHERE u.role_id = r.id and u.username = ?
			</beans:value>
		</beans:property>
	</beans:bean>

	<beans:bean id="customAuthenticationSuccessHandler"
		class="com.travel.security.extended.CustomAuthenticationSuccessHandler">
		<beans:property name="userService" ref="userService" />
		<beans:property name="defaultTargetUrl" value="/AdminHome.action" />
	</beans:bean>

	<beans:bean id="exceptionTranslationFilter"
		class="org.springframework.security.web.access.ExceptionTranslationFilter">
		<beans:property name="authenticationEntryPoint" ref="authenticationEntryPoint" />
		<beans:property name="accessDeniedHandler" ref="accessDeniedHandler" />
	</beans:bean>

	<beans:bean id="authenticationEntryPoint"
		class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<beans:property name="loginFormUrl" value="/homepage.action" />
	</beans:bean>

	<beans:bean id="accessDeniedHandler"
		class="org.springframework.security.web.access.AccessDeniedHandlerImpl">
		<beans:property name="errorPage"
			value="/homepage.action?accessDenied=true" />
	</beans:bean>
	<beans:bean id="customAuthenticationFailureHandler"
		class="com.travel.security.extended.CustomAuthenticationFailureHandler">
		<beans:property name="defaultFailureUrl" value="/homepage.action?authFailed=true" />
	</beans:bean>
	<beans:bean id="accessDecisionManager"
		class="org.springframework.security.access.vote.AffirmativeBased">
		<beans:property name="allowIfAllAbstainDecisions"
			value="false" />
		<beans:property name="decisionVoters">
			<beans:list>
				<beans:ref local="roleVoter" />
			</beans:list>
		</beans:property>
	</beans:bean>
	<beans:bean id="roleVoter"
		class="org.springframework.security.access.vote.RoleVoter">
		<beans:property name="rolePrefix" value="" />
	</beans:bean>
</beans:beans>